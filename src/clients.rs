// Generated file, last update was: 2022-10-28 20:55
#[allow(non_camel_case_types)]
#[derive(Clone, Debug)]
pub enum ClientVersion {
    Bittorrent_7_10_1_43917,
    Bittorrent_7_10_3_44359,
    Bittorrent_7_10_3_44429,
    Deluge_1_3_13,
    Deluge_1_3_14,
    Deluge_1_3_15,
    Deluge_2_0_3,
    Leap_2_6_0_1,
    Qbittorrent_3_3_1,
    Qbittorrent_3_3_13,
    Qbittorrent_3_3_14,
    Qbittorrent_3_3_15,
    Qbittorrent_3_3_16,
    Qbittorrent_3_3_7,
    Qbittorrent_4_0_0,
    Qbittorrent_4_0_1,
    Qbittorrent_4_0_2,
    Qbittorrent_4_0_3,
    Qbittorrent_4_0_4,
    Qbittorrent_4_1_0,
    Qbittorrent_4_1_1,
    Qbittorrent_4_1_2,
    Qbittorrent_4_1_3,
    Qbittorrent_4_1_4,
    Qbittorrent_4_1_5,
    Qbittorrent_4_1_6,
    Qbittorrent_4_1_7,
    Qbittorrent_4_1_8,
    Qbittorrent_4_1_9,
    Qbittorrent_4_2_0,
    Qbittorrent_4_2_1,
    Qbittorrent_4_2_2,
    Qbittorrent_4_2_3,
    Qbittorrent_4_2_4,
    Qbittorrent_4_2_5,
    Qbittorrent_4_3_0_1,
    Qbittorrent_4_3_0,
    Qbittorrent_4_3_1,
    Qbittorrent_4_3_2,
    Qbittorrent_4_3_3,
    Qbittorrent_4_3_4_1,
    Qbittorrent_4_3_5,
    Qbittorrent_4_3_6,
    Qbittorrent_4_3_8,
    Qbittorrent_4_3_9,
    Qbittorrent_4_4_2,
    Qbittorrent_4_4_3_1,
    Rtorrent_0_9_6_0_13_6,
    Transmission_2_82_14160,
    Transmission_2_92_14714,
    Transmission_2_93,
    Transmission_2_94,
    Transmission_3_00,
    Utorrent_3_2_2_28500,
    Utorrent_3_5_0_43916,
    Utorrent_3_5_0_44090,
    Utorrent_3_5_0_44294,
    Utorrent_3_5_1_44332,
    Utorrent_3_5_3_44358,
    Utorrent_3_5_3_44428,
    Utorrent_3_5_4_44498,
    Vuze_5_7_5_0,
}

impl crate::Client {
    /// Build and return the client drom the given key
    pub fn from(client_version: ClientVersion) -> crate::Client {
        let mut client = match client_version {
            ClientVersion::Bittorrent_7_10_1_43917 => crate::Client {
                name: String::from("bittorrent-7.10.1_43917"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TimedOrAfterStartedAnnounce,
                peer_pattern: String::from("-BT71000(«)[-ÿ]{10}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("BitTorrent/7100(255961997)(43917)"),
                connection: Some(String::from("Close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Bittorrent_7_10_3_44359 => crate::Client {
                name: String::from("bittorrent-7.10.3_44359"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TimedOrAfterStartedAnnounce,
                peer_pattern: String::from("-BT7a3S-G(­)[-ÿ]{10}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("BitTorrent/7103(256355655)(44359)"),
                connection: Some(String::from("Close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Bittorrent_7_10_3_44429 => crate::Client {
                name: String::from("bittorrent-7.10.3_44429"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TimedOrAfterStartedAnnounce,
                peer_pattern: String::from("-BT7a3S-()(­)[-ÿ]{10}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("BitTorrent/7103(256355725)(44429)"),
                connection: Some(String::from("Close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Deluge_1_3_13 => crate::Client {
                name: String::from("deluge-1.3.13"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-DE13D0-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("Deluge 1.3.13"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Deluge_1_3_14 => crate::Client {
                name: String::from("deluge-1.3.14"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-DE13E0-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("Deluge 1.3.14"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Deluge_1_3_15 => crate::Client {
                name: String::from("deluge-1.3.15"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-DE13F0-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("Deluge 1.3.15"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Deluge_2_0_3 => crate::Client {
                name: String::from("deluge-2.0.3"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-DE203s-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("Deluge/2.0.3 libtorrent/2.0.5.0"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Leap_2_6_0_1 => crate::Client {
                name: String::from("leap-2.6.0.1"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-LT1100-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("libtorrent_leap/1.1.1.0"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_3_3_1 => crate::Client {
                name: String::from("qbittorrent-3.3.1"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB3310-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent v3.3.1"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_3_3_13 => crate::Client {
                name: String::from("qbittorrent-3.3.13"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB33D0-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/3.3.13"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_3_3_14 => crate::Client {
                name: String::from("qbittorrent-3.3.14"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB33E0-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/3.3.14"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_3_3_15 => crate::Client {
                name: String::from("qbittorrent-3.3.15"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB33F0-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/3.3.15"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_3_3_16 => crate::Client {
                name: String::from("qbittorrent-3.3.16"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB33G0-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/3.3.16"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_3_3_7 => crate::Client {
                name: String::from("qbittorrent-3.3.7"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB3310-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent v3.3.7"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_0_0 => crate::Client {
                name: String::from("qbittorrent-4.0.0"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4000-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.0.0"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_0_1 => crate::Client {
                name: String::from("qbittorrent-4.0.1"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4010-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.0.1"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_0_2 => crate::Client {
                name: String::from("qbittorrent-4.0.2"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4020-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.0.2"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_0_3 => crate::Client {
                name: String::from("qbittorrent-4.0.3"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4030-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.0.3"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_0_4 => crate::Client {
                name: String::from("qbittorrent-4.0.4"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4040-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.0.4"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_1_0 => crate::Client {
                name: String::from("qbittorrent-4.1.0"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4100-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.1.0"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_1_1 => crate::Client {
                name: String::from("qbittorrent-4.1.1"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4110-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.1.1"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_1_2 => crate::Client {
                name: String::from("qbittorrent-4.1.2"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4120-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.1.2"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_1_3 => crate::Client {
                name: String::from("qbittorrent-4.1.3"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4130-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.1.3"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_1_4 => crate::Client {
                name: String::from("qbittorrent-4.1.4"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4140-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.1.4"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_1_5 => crate::Client {
                name: String::from("qbittorrent-4.1.5"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4150-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.1.5"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_1_6 => crate::Client {
                name: String::from("qbittorrent-4.1.6"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4160-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.1.6"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_1_7 => crate::Client {
                name: String::from("qbittorrent-4.1.7"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4170-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.1.7"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_1_8 => crate::Client {
                name: String::from("qbittorrent-4.1.8"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4180-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.1.8"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_1_9 => crate::Client {
                name: String::from("qbittorrent-4.1.9"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4190-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.1.9"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_2_0 => crate::Client {
                name: String::from("qbittorrent-4.2.0"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4200-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.2.0"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_2_1 => crate::Client {
                name: String::from("qbittorrent-4.2.1"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4210-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.2.1"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_2_2 => crate::Client {
                name: String::from("qbittorrent-4.2.2"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4220-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.2.2"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_2_3 => crate::Client {
                name: String::from("qbittorrent-4.2.3"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4230-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.2.3"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_2_4 => crate::Client {
                name: String::from("qbittorrent-4.2.4"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4240-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.2.4"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_2_5 => crate::Client {
                name: String::from("qbittorrent-4.2.5"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4250-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.2.5"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_3_0_1 => crate::Client {
                name: String::from("qbittorrent-4.3.0.1"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4301-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.3.0.1"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_3_0 => crate::Client {
                name: String::from("qbittorrent-4.3.0"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4300-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.3.0"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_3_1 => crate::Client {
                name: String::from("qbittorrent-4.3.1"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4310-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.3.1"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_3_2 => crate::Client {
                name: String::from("qbittorrent-4.3.2"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4320-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.3.2"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_3_3 => crate::Client {
                name: String::from("qbittorrent-4.3.3"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4330-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.3.3"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_3_4_1 => crate::Client {
                name: String::from("qbittorrent-4.3.4.1"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4341-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.3.4.1"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_3_5 => crate::Client {
                name: String::from("qbittorrent-4.3.5"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4350-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.3.5"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_3_6 => crate::Client {
                name: String::from("qbittorrent-4.3.6"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4360-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.3.6"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_3_8 => crate::Client {
                name: String::from("qbittorrent-4.3.8"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4380-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.3.8"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_3_9 => crate::Client {
                name: String::from("qbittorrent-4.3.9"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4390-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.3.9"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_4_2 => crate::Client {
                name: String::from("qbittorrent-4.4.2"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4420-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.4.2"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Qbittorrent_4_4_3_1 => crate::Client {
                name: String::from("qbittorrent-4.4.3.1"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-qB4431-[A-Za-z0-9_~\\(\\)\\!\\.\\*-]{12}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&supportcrypto=1&redundant=0"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("qBittorrent/4.4.3.1"),
                connection: Some(String::from("close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Rtorrent_0_9_6_0_13_6 => crate::Client {
                name: String::from("rtorrent-0.9.6_0.13.6"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(false),
                key_refresh_on: crate::RefreshInterval::TorrentPersistent,
                peer_pattern: String::from("-lt0D60-[-ÿ]{12}"),
                peer_refresh_on: crate::RefreshInterval::TorrentPersistent,
                uppercase_encoded_hex: true,
                num_want: 50, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&key={key}&compact=1&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&event={event}"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("rtorrent/0.9.6/0.13.6"),
                accept_encoding: String::from("deflate, gzip"),
                accept: String::from("*/*"),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Transmission_2_82_14160 => crate::Client {
                name: String::from("transmission-2.82_14160"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(false),
                key_refresh_on: crate::RefreshInterval::Never,
                peer_algorithm: crate::algorithm::Algorithm::RandomPoolWithChecksum,
                peer_prefix: String::from("-TR2820-"),
                peer_refresh_on: crate::RefreshInterval::TorrentVolatile,
                uppercase_encoded_hex: false,
                num_want: 80, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&numwant={numwant}&key={key}&compact=1&supportcrypto=1&event={event}&ipv6={ipv6}"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: false,
                user_agent: String::from("Transmission/2.82"),
                accept_encoding: String::from("gzip;q=1.0, deflate, identity"),
                accept: String::from("*/*"),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Transmission_2_92_14714 => crate::Client {
                name: String::from("transmission-2.92_14714"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(false),
                key_refresh_on: crate::RefreshInterval::Never,
                peer_algorithm: crate::algorithm::Algorithm::RandomPoolWithChecksum,
                peer_prefix: String::from("-TR284Z-"),
                peer_refresh_on: crate::RefreshInterval::TorrentVolatile,
                uppercase_encoded_hex: false,
                num_want: 80, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&numwant={numwant}&key={key}&compact=1&supportcrypto=1&event={event}&ipv6={ipv6}"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: false,
                user_agent: String::from("Transmission/2.84+"),
                accept_encoding: String::from("gzip;q=1.0, deflate, identity"),
                accept: String::from("*/*"),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Transmission_2_93 => crate::Client {
                name: String::from("transmission-2.93"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(false),
                key_refresh_on: crate::RefreshInterval::Never,
                peer_algorithm: crate::algorithm::Algorithm::RandomPoolWithChecksum,
                peer_prefix: String::from("-TR2930-"),
                peer_refresh_on: crate::RefreshInterval::TorrentVolatile,
                uppercase_encoded_hex: false,
                num_want: 80, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&numwant={numwant}&key={key}&compact=1&supportcrypto=1&event={event}&ipv6={ipv6}"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: false,
                user_agent: String::from("Transmission/2.93"),
                accept_encoding: String::from("gzip;q=1.0, deflate, identity"),
                accept: String::from("*/*"),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Transmission_2_94 => crate::Client {
                name: String::from("transmission-2.94"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(false),
                key_refresh_on: crate::RefreshInterval::Never,
                peer_algorithm: crate::algorithm::Algorithm::RandomPoolWithChecksum,
                peer_prefix: String::from("-TR2940-"),
                peer_refresh_on: crate::RefreshInterval::TorrentVolatile,
                uppercase_encoded_hex: false,
                num_want: 80, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&numwant={numwant}&key={key}&compact=1&supportcrypto=1&event={event}&ipv6={ipv6}"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: false,
                user_agent: String::from("Transmission/2.94"),
                accept_encoding: String::from("gzip;q=1.0, deflate, identity"),
                accept: String::from("*/*"),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Transmission_3_00 => crate::Client {
                name: String::from("transmission-3.00"),
                key_algorithm: crate::algorithm::Algorithm::HashNoLeadingZero,
                key_uppercase: Some(false),
                key_refresh_on: crate::RefreshInterval::Never,
                peer_algorithm: crate::algorithm::Algorithm::RandomPoolWithChecksum,
                peer_prefix: String::from("-TR3000-"),
                peer_refresh_on: crate::RefreshInterval::TorrentVolatile,
                uppercase_encoded_hex: false,
                num_want: 80, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&numwant={numwant}&key={key}&compact=1&supportcrypto=1&event={event}&ipv6={ipv6}"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: false,
                user_agent: String::from("Transmission/3.00"),
                accept_encoding: String::from("deflate, gzip"),
                accept: String::from("*/*"),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Utorrent_3_2_2_28500 => crate::Client {
                name: String::from("utorrent-3.2.2_28500"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TimedOrAfterStartedAnnounce,
                peer_pattern: String::from("-UT3220-To[-ÿ]{10}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 200,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1&ipv6={ipv6}"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("uTorrent/3220(28500)"),
                connection: Some(String::from("Close")),
                accept_language: String::from("{locale}"),
                ..crate::Client::default()
            },
            ClientVersion::Utorrent_3_5_0_43916 => crate::Client {
                name: String::from("utorrent-3.5.0_43916"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TimedOrAfterStartedAnnounce,
                peer_pattern: String::from("-UT3500-(«)[-ÿ]{10}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("uTorrent/350(111258508)(43916)"),
                connection: Some(String::from("Close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Utorrent_3_5_0_44090 => crate::Client {
                name: String::from("utorrent-3.5.0_44090"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TimedOrAfterStartedAnnounce,
                peer_pattern: String::from("-UT3500-(:¬)[-ÿ]{10}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("uTorrent/350(111258682)(44090)"),
                connection: Some(String::from("Close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Utorrent_3_5_0_44294 => crate::Client {
                name: String::from("utorrent-3.5.0_44294"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TimedOrAfterStartedAnnounce,
                peer_pattern: String::from("-UT3500-(­)[-ÿ]{10}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("uTorrent/350(111258886)(44294)"),
                connection: Some(String::from("Close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Utorrent_3_5_1_44332 => crate::Client {
                name: String::from("utorrent-3.5.1_44332"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TimedOrAfterStartedAnnounce,
                peer_pattern: String::from("-UT3515-(,­)[-ÿ]{10}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("uTorrent/351(111389996)(44332)"),
                connection: Some(String::from("Close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Utorrent_3_5_3_44358 => crate::Client {
                name: String::from("utorrent-3.5.3_44358"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TimedOrAfterStartedAnnounce,
                peer_pattern: String::from("-UT353S-F(­)[-ÿ]{10}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("uTorrent/353(111652166)(44358)"),
                connection: Some(String::from("Close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Utorrent_3_5_3_44428 => crate::Client {
                name: String::from("utorrent-3.5.3_44428"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TimedOrAfterStartedAnnounce,
                peer_pattern: String::from("-UT353S-()(­)[-ÿ]{10}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("uTorrent/353(111652236)(44428)"),
                connection: Some(String::from("Close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Utorrent_3_5_4_44498 => crate::Client {
                name: String::from("utorrent-3.5.4_44498"),
                key_algorithm: crate::algorithm::Algorithm::Hash,
                key_uppercase: Some(true),
                key_refresh_on: crate::RefreshInterval::TimedOrAfterStartedAnnounce,
                peer_pattern: String::from("-UT354S-(Ò)(­)[-ÿ]{10}"),
                uppercase_encoded_hex: false,
                num_want: 200, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&key={key}&event={event}&numwant={numwant}&compact=1&no_peer_id=1"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9-]"),
                peer_url_encode: true,
                user_agent: String::from("uTorrent/354(111783378)(44498)"),
                connection: Some(String::from("Close")),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
            ClientVersion::Vuze_5_7_5_0 => crate::Client {
                name: String::from("vuze-5.7.5.0"),
                key_algorithm: crate::algorithm::Algorithm::Regex,
                key_pattern: String::from("[A-Za-z0-9]{8}"),
                key_uppercase: None,
                key_refresh_on: crate::RefreshInterval::TorrentVolatile,
                peer_pattern: String::from("-AZ5750-[a-zA-Z0-9]{12}"),
                peer_refresh_on: crate::RefreshInterval::TorrentVolatile,
                uppercase_encoded_hex: true,
                num_want: 100, num_want_on_stop: 0,
                query: String::from("info_hash={infohash}&peer_id={peerid}&port={port}&azudp={port}&uploaded={uploaded}&downloaded={downloaded}&left={left}&corrupt=0&event={event}&numwant={numwant}&no_peer_id=1&compact=1&key={key}&azver=3"),
                encoding_exclusion_pattern: String::from("[A-Za-z0-9_~\\(\\)\\!\\.\\*-]"),
                peer_url_encode: false,
                user_agent: String::from("Azureus 5.7.5.0;{os};Java {java}"),
                connection: Some(String::from("close")),
                accept: String::from("text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"),
                accept_language: String::from(""),
                ..crate::Client::default()
            },
        };
        client.generate_key();
        client.generate_peer_id();
        client
    }
}
